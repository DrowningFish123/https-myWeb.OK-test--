#version 300 es
precision highp float;
in vec4 v_position;
in vec4 v_normal;
in vec4 v_color;
in vec4 v_ambient;
in vec4 v_point_pos;
in vec4 v_point_color;
in float v_reduction_a;
in float v_reduction_b;
in float v_reduction_c;
in float v_diffuse_intensity;
in float v_mirror_intensity;
in float v_diffuse_reflection;
in float v_mirror_reflection;
in float v_highLight;
in vec4 v_perspective_pos;
out vec4 fragColor;
    void main(){
        vec3 normal = vec3(v_normal);
        vec3 point_pos = vec3(v_point_pos);
        vec3 position = vec3(v_position);
        vec3 point_relative_pos = point_pos - position;
        float length = length(point_relative_pos);
        vec3 halfangle = normalize(normalize(vec3(point_relative_pos))+normalize(vec3(v_perspective_pos - v_position)));
        float theta = max(dot(normalize(point_relative_pos),normalize(normal)),0.0);
        float reduction = 1.0/(v_reduction_a+v_reduction_b*length+v_reduction_c*length*length);
        float diffuse = v_diffuse_intensity * v_diffuse_reflection * theta;
        float mirror = v_mirror_intensity * v_mirror_reflection * max(pow(dot(normalize(normal),halfangle),v_highLight),0.0);
        float phong = reduction * (diffuse + mirror);
        vec3 point = vec3(v_point_color) * vec3(v_color) * phong;
        vec3 ambient = vec3(v_ambient) * vec3(v_color);
        fragColor = vec4(ambient + point,1.0);
    }